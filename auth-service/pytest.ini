[pytest]
# Pytest configuration for auth service

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-branch
    --cov-fail-under=80

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    security: Security-specific tests
    requires_db: Tests that require database
    requires_redis: Tests that require Redis

# Environment variables for testing
env =
    ENVIRONMENT=test
    DATABASE_URL=postgresql://test:test@localhost:5432/auth_test
    REDIS_URL=redis://localhost:6379/1
    JWT_SECRET_KEY=test_secret_key_for_testing_only
    JWT_ALGORITHM=HS256
    ACCESS_TOKEN_EXPIRE_MINUTES=15
    REFRESH_TOKEN_EXPIRE_DAYS=7

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning