apiVersion: v1
kind: ConfigMap
metadata:
  name: pgbouncer-config
  namespace: llmoptimizer
data:
  pgbouncer.ini: |
    [databases]
    llmoptimizer_main = host=postgres-primary-service port=5432 dbname=llmoptimizer
    llmoptimizer_read = host=postgres-replica-service port=5432 dbname=llmoptimizer
    llmoptimizer_analytics = host=postgres-analytics-service port=5432 dbname=llmoptimizer_analytics

    [pgbouncer]
    pool_mode = transaction
    default_pool_size = 25
    min_pool_size = 10
    reserve_pool_size = 5
    max_client_conn = 10000
    max_db_connections = 1000
    
    auth_type = md5
    auth_file = /etc/pgbouncer/userlist.txt
    
    server_round_robin = 1
    server_lifetime = 3600
    server_idle_timeout = 600
    
    log_connections = 1
    log_disconnections = 1
    log_pooler_errors = 1
    stats_period = 60
    
    listen_addr = *
    listen_port = 6432
    
    admin_users = pgbouncer_admin
    stats_users = pgbouncer_stats,pgbouncer_admin
    
    server_tls_sslmode = prefer
    client_tls_sslmode = prefer
    
    so_reuseport = 1

---
apiVersion: v1
kind: Secret
metadata:
  name: pgbouncer-userlist
  namespace: llmoptimizer
type: Opaque
stringData:
  userlist.txt: |
    "llmoptimizer_app" "md5<app_password_hash>"
    "pgbouncer_admin" "md5<admin_password_hash>"
    "pgbouncer_stats" "md5<stats_password_hash>"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer
  namespace: llmoptimizer
  labels:
    app: pgbouncer
    component: database-proxy
spec:
  replicas: 3  # Multiple replicas for high availability
  selector:
    matchLabels:
      app: pgbouncer
  template:
    metadata:
      labels:
        app: pgbouncer
        component: database-proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9127"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pgbouncer
              topologyKey: kubernetes.io/hostname
      containers:
      - name: pgbouncer
        image: llmoptimizer/pgbouncer:latest
        ports:
        - name: pgbouncer
          containerPort: 6432
          protocol: TCP
        env:
        - name: POOL_MODE
          value: "transaction"
        - name: POOL_SIZE
          value: "25"
        - name: MAX_CLIENT_CONN
          value: "10000"
        - name: MAX_DB_CONNECTIONS
          value: "1000"
        - name: DB_HOST
          value: "postgres-primary-service"
        - name: DB_HOST_REPLICA
          value: "postgres-replica-service"
        - name: DB_HOST_ANALYTICS
          value: "postgres-analytics-service"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 6432
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6432
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: pgbouncer-config
          mountPath: /etc/pgbouncer/pgbouncer.ini
          subPath: pgbouncer.ini
        - name: pgbouncer-userlist
          mountPath: /etc/pgbouncer/userlist.txt
          subPath: userlist.txt
      
      # PgBouncer exporter for Prometheus metrics
      - name: pgbouncer-exporter
        image: prometheuscommunity/pgbouncer-exporter:v0.7.0
        ports:
        - name: metrics
          containerPort: 9127
        env:
        - name: PGBOUNCER_HOST
          value: "localhost"
        - name: PGBOUNCER_PORT
          value: "6432"
        - name: PGBOUNCER_USER
          value: "pgbouncer_stats"
        - name: PGBOUNCER_PASS
          valueFrom:
            secretKeyRef:
              name: pgbouncer-credentials
              key: stats-password
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      volumes:
      - name: pgbouncer-config
        configMap:
          name: pgbouncer-config
      - name: pgbouncer-userlist
        secret:
          secretName: pgbouncer-userlist
          defaultMode: 0600

---
apiVersion: v1
kind: Service
metadata:
  name: pgbouncer-service
  namespace: llmoptimizer
  labels:
    app: pgbouncer
spec:
  type: ClusterIP
  ports:
  - name: pgbouncer
    port: 6432
    targetPort: 6432
    protocol: TCP
  - name: metrics
    port: 9127
    targetPort: 9127
    protocol: TCP
  selector:
    app: pgbouncer
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: pgbouncer-service-headless
  namespace: llmoptimizer
  labels:
    app: pgbouncer
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: pgbouncer
    port: 6432
    targetPort: 6432
  selector:
    app: pgbouncer

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pgbouncer-pdb
  namespace: llmoptimizer
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: pgbouncer