apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: llmoptimizer
  labels:
    app: ml-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-service
      version: v1
  template:
    metadata:
      labels:
        app: ml-service
        version: v1
    spec:
      containers:
      - name: ml-service
        image: llmoptimizer/ml-service:latest
        ports:
        - containerPort: 8000
          protocol: TCP
        env:
        - name: PORT
          value: "8000"
        envFrom:
        - configMapRef:
            name: llmoptimizer-config
        - secretRef:
            name: llmoptimizer-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: ml-models-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: llmoptimizer
  labels:
    app: ml-service
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: ml-service

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-models-pvc
  namespace: llmoptimizer
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard