apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: control-plane
  namespace: istio-system
spec:
  # Use the default profile as base
  profile: production
  
  # Istio control plane configuration
  values:
    pilot:
      autoscaleEnabled: true
      autoscaleMin: 2
      autoscaleMax: 5
      resources:
        requests:
          cpu: 500m
          memory: 2048Mi
        limits:
          cpu: 1000m
          memory: 4096Mi
      env:
        # Enable access logs
        PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
        PILOT_ENABLE_ANALYSIS: true
    
    telemetry:
      v2:
        enabled: true
        prometheus:
          configOverride:
            inboundSidecar:
              disable_host_header_fallback: true
            outboundSidecar:
              disable_host_header_fallback: true
            gateway:
              disable_host_header_fallback: true
    
    global:
      # Enable Istio CNI plugin for better security
      istioNamespace: istio-system
      defaultResources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
      
      # Enable automatic sidecar injection
      proxy:
        autoInject: enabled
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        
        # Enable access logging
        accessLogFile: /dev/stdout
        accessLogFormat: |
          [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% "%DOWNSTREAM_REMOTE_ADDRESS%" "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
        
        # Security settings
        holdApplicationUntilProxyStarts: true
      
      # Enable mTLS by default
      mtls:
        auto: true
  
  # Component configuration
  components:
    base:
      enabled: true
    
    pilot:
      enabled: true
      k8s:
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
    
    # Ingress gateways
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        hpaSpec:
          minReplicas: 2
          maxReplicas: 10
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1024Mi
        service:
          type: LoadBalancer
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
          - port: 80
            targetPort: 8080
            name: http2
          - port: 443
            targetPort: 8443
            name: https
          - port: 15443
            targetPort: 15443
            name: tls
    
    # Egress gateway (optional, for controlled outbound traffic)
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
  
  # Mesh configuration
  meshConfig:
    # Enable access logs for all workloads
    accessLogFile: /dev/stdout
    
    # Default configuration for sidecars
    defaultConfig:
      # Enable distributed tracing
      tracing:
        sampling: 1.0  # 1% sampling in production
        zipkin:
          address: jaeger-collector.monitoring:9411
      
      # Enable Prometheus metrics
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*outlier_detection.*"
        - ".*circuit_breakers.*"
        - ".*upstream_rq_retry.*"
        - ".*upstream_rq_pending.*"
        - ".*upstream_rq_timeout.*"
        - ".*tcp.*"
      
      # Concurrency settings
      concurrency: 2
      
      # Terminate TLS at sidecar
      terminationDrainDuration: 30s
    
    # Enable auto mTLS
    defaultProviders:
      metrics:
      - prometheus
      tracing:
      - jaeger
    
    # Extension providers
    extensionProviders:
    - name: prometheus
      prometheus:
        service: prometheus.monitoring.svc.cluster.local
        port: 9090
    - name: jaeger
      envoyZipkin:
        service: jaeger-collector.monitoring.svc.cluster.local
        port: 9411
    - name: grafana
      grafana:
        service: grafana.monitoring.svc.cluster.local
        port: 3000
    
    # Trust domain for SPIFFE identity
    trustDomain: cluster.local
    
    # Enable protocol sniffing
    protocolDetectionTimeout: 5s